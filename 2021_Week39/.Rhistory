#scatter num groups
labels_df3 <- data.frame(x=c(10177621, 31128461), y=c(11, 9),
labels=c('Espeeco: 11', 'Valex: 9'))
med_scatter_groups <- med_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#FFCE06", fill="#FFCE06", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df3, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Medium Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(10000000, 50500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_med_scatter_groups2020.png",
plot=med_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
labels_df4 <- data.frame(x=c(16835738), y=c(27094), labels=c('Clean Energy: 27,094'))
med_scatter_members <- med_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#FFCE06", fill="#FFCE06", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df4, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Medium Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(10000000, 50500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_med_scatter_members2020.png",
plot=med_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
summary(large_cu_stats$num_groups_added)
summary(large_cu_stats$total_members_added)
#scatter num groups
labels_df5 <- data.frame(x=c(77243697, 73357331), y=c(14, 9),
labels=c('ACMG: 14', 'St. Thomas: 9'))
large_scatter_groups <- large_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#EE8109", fill="#EE8109", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df5, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Large Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(50000000, 100500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_large_scatter_groups2020.png",
plot=large_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
labels_df6 <- data.frame(x=c(55650001, 90584447, 52380483), y=c(11000, 3913, 3800),
labels=c('Electel Cooperative: 11,000', 'Welcome: 3913', 'Southcoast: 3800'))
large_scatter_members <- large_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#EE8109", fill="#EE8109", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df6, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Large Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(50000000, 100500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_large_scatter_members2020.png",
plot=large_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
summary(xlarge_cu_stats$num_groups_added)
summary(xlarge_cu_stats$total_members_added)
#scatter num groups
labels_df7 <- data.frame(x=c(367983039, 482534005, 396799273), y=c(210, 95, 74),
labels=c('AOD: 210', 'Service 1st: 95', 'Railroad & Industrial: 74'))
xlarge_scatter_groups <- xlarge_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#B9272A", fill="#B9272A", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df7, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="X-Large Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(100000000, 500500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_xlarge_scatter_groups2020.png",
plot=xlarge_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
labels_df8 <- data.frame(x=c(375681469), y=c(6639325),
labels=c('Beehive: 6,639,325'))
xlarge_scatter_members <- xlarge_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#B9272A", fill="#B9272A", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df8, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="X-Large Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(100000000, 500500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_xlarge_scatter_members2020.png",
plot=xlarge_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#another scatterplot to better see points other than outlier
labels_df9 <- data.frame(x=c(266490750, 253721694, 341447021), y=c(288747, 279897, 189337),
labels=c('WYHY: 288,747', 'Parsons: 279,897', 'Signature: 189,337'))
xlarge_scatter_members2 <- xlarge_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#B9272A", fill="#B9272A", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df9, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="X-Large Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(100000000, 500500000)) +
scale_y_continuous(labels=scales::comma, limits = c(0, 300000)) +
scatter_theme
ggsave("visuals/cu_xlarge_scatter_members2020_2.png",
plot=xlarge_scatter_members2,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
summary(huge_cu_stats$num_groups_added)
summary(huge_cu_stats$total_members_added)
#scatter num groups
labels_df10 <- data.frame(x=c(2259325028), y=c(909),
labels=c('Empower: 909'))
huge_scatter_groups <- huge_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#4AA02E", fill="#4AA02E", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df10, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Huge Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(500000000, 14000500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_huge_scatter_groups2020.png",
plot=huge_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
labels_df11 <- data.frame(x=c(837041248), y=c(5048305),
labels=c('Notre Dame: 5,048,305'))
huge_scatter_members <- huge_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#4AA02E", fill="#4AA02E", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df11, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Huge Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(500000000, 14000500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_huge_scatter_members2020.png",
plot=huge_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#another scatterplot to better see points other than outlier
labels_df12 <- data.frame(x=c(572620446), y=c(988305),
labels=c('SkyOne: 988,305'))
huge_scatter_members2 <- huge_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#4AA02E", fill="#4AA02E", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df12, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Huge Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(500000000, 14000500000)) +
scale_y_continuous(labels=scales::comma, limits = c(0, 1000000)) +
scatter_theme
ggsave("visuals/cu_huge_scatter_members2020_2.png",
plot=huge_scatter_members2,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
library(ggridges)
ridgeline <- ggplot(cu_stats, aes(x=num_groups_added, y=cu_size, fill=cu_size)) + geom_density_ridges() + theme_ridges() + xlim(c(-50,100)) + theme(legend.position="none")
ggsave("visuals/ridgeline.png",
plot=ridgeline,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
raincloud <- ggplot(data=cu_stats, aes(x=cu_size, y=num_groups_added, fill=cu_size)) +
geom_flat_violin(position=position_nudge(x=0.2, y=0), alpha=0.8) +
geom_point(aes(y=num_groups_added, color=cu_size),
position=position_jitter(width=0.15), size=1, alpha=0.1) +
geom_boxplot(width=0.2, outlier.shape=NA, alpha=0.8) +
coord_flip() + ylim(0,50) +
labs(y="Number of Groups Added", x=NULL) +
guides(fill=FALSE, color=FALSE)
ggsave("visuals/raindcloud.png",
plot=raincloud,
device = agg_png(width=4, height=3, units="in", res=300))
cu_stats <- cu_stats %>% mutate(cu_size2 = case_when(
avg_assets<100000000 ~ "small",
avg_assets>=100000000 & avg_assets<500000000 ~ "medium",
avg_assets>=500000000 ~ "large"
))
small_cu_stats <- cu_stats %>% filter(avg_assets>=1 & avg_assets<100000000)
med_cu_stats <- cu_stats %>% filter(avg_assets>=100000000 & avg_assets<500000000)
large_cu_stats <- cu_stats %>% filter(avg_assets>=500000000)
write.csv(small_cu_stats, "d3/data/small_stats.csv", row.names=FALSE)
write.csv(med_cu_stats, "d3/data/med_stats.csv", row.names=FALSE)
write.csv(large_cu_stats, "d3/data/large_stats.csv", row.names=FALSE)
#scatterplot theme
scatter_theme <- my_theme <- theme(
#titles
plot.title=element_text(family="bold", size=30, color="black", hjust=0),
#background
panel.border=element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_line(),
axis.line = element_blank(),
axis.title = element_text(size=25, family="bold", colour="black"),
axis.text = element_text(size=18, family="regular", colour="black"),
#no legend
legend.position = "none")
#5-number summary
summary(small_cu_stats$num_groups_added)
summary(small_cu_stats$total_members_added)
#scatter num groups
#labels_df1 <- data.frame(x=c(5248900, 7000342), y=c(6, 6), labels=c('Valley Agricultural: 6', 'Noteworthy: 6'))
small_scatter_groups <- small_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#15ADC1", fill="#15ADC1", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df1, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Small Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(0, 100500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_small_scatter_groups20202.png",
plot=small_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
#labels_df2 <- data.frame(x=c(2947798,7000342, 5248900), y=c(645,1350, 500),
#labels=c('Local 265 IBEW: 645', 'Noteworthy: 1350', 'Valley Agricultural: 500'))
small_scatter_members <- small_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#15ADC1", fill="#15ADC1", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df2, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Small Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(0, 100500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_small_scatter_members20202.png",
plot=small_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
small_standouts <- small_cu_stats %>% filter(num_groups_added>7 | total_members_added>2600)
#5-number summary
summary(med_cu_stats$num_groups_added)
summary(med_cu_stats$total_members_added)
#scatter num groups
#labels_df3 <- data.frame(x=c(10177621, 31128461), y=c(11, 9),
#                         labels=c('Espeeco: 11', 'Valex: 9'))
med_scatter_groups <- med_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#FFCE06", fill="#FFCE06", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df3, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Medium Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(100000000, 500500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_med_scatter_groups20202.png",
plot=med_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
#labels_df4 <- data.frame(x=c(16835738), y=c(27094), labels=c('Clean Energy: 27,094'))
med_scatter_members <- med_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#FFCE06", fill="#FFCE06", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df4, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Medium Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(100000000, 500500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_med_scatter_members20202.png",
plot=med_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
med_standouts <- med_cu_stats %>% filter(num_groups_added>50 | total_members_added>63500)
summary(large_cu_stats$num_groups_added)
summary(large_cu_stats$total_members_added)
#scatter num groups
#labels_df5 <- data.frame(x=c(77243697, 73357331), y=c(14, 9),
#                         labels=c('ACMG: 14', 'St. Thomas: 9'))
large_scatter_groups <- large_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#EE8109", fill="#EE8109", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df5, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Large Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(500000000, 14000500000)) +
scale_y_continuous(labels=scales::comma) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_large_scatter_groups20202.png",
plot=large_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
#labels_df6 <- data.frame(x=c(55650001, 90584447, 52380483), y=c(11000, 3913, 3800),
#                         labels=c('Electel Cooperative: 11,000', 'Welcome: 3913', 'Southcoast: 3800'))
large_scatter_members <- large_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#EE8109", fill="#EE8109", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df6, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Large Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(500000000, 14000500000)) +
scale_y_continuous(labels=scales::comma, limits = c(0, 1000000)) +
scatter_theme
ggsave("visuals/cu_large_scatter_members20202.png",
plot=large_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
library(ggridges)
ridgeline <- ggplot(cu_stats, aes(x=num_groups_added, y=cu_size2, fill=cu_size2)) +
geom_density_ridges(quantile_lines=TRUE,
quantile_fun=function(x,...)mean(x)) +
theme_ridges() + xlim(c(-10,100)) + theme(legend.position="none")
ggsave("visuals/ridgeline2.png",
plot=ridgeline,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
raincloud <- ggplot(data=cu_stats, aes(x=cu_size2, y=num_groups_added, fill=cu_size2)) +
geom_flat_violin(position=position_nudge(x=0.2, y=0), alpha=0.8) +
geom_point(aes(y=num_groups_added, color=cu_size2),
position=position_jitter(width=0.15), size=1, alpha=0.1) +
geom_boxplot(width=0.2, outlier.shape=NA, alpha=0.8) +
coord_flip() + ylim(0,50) +
labs(y="Number of Groups Added", x=NULL) +
guides(fill=FALSE, color=FALSE)
ggsave("visuals/raindcloud2.png",
plot=raincloud,
device = agg_png(width=4, height=3, units="in", res=300))
View(large_cu_stats)
large_standouts <- large_cu_stats %>% filter(num_groups_added>200 | total_members_added>200000)
View(large_standouts)
large_standouts <- large_cu_stats %>% filter(num_groups_added>250 | total_members_added>200000)
View(large_standouts)
large_standouts <- large_cu_stats %>% filter(num_groups_added>250 | total_members_added>250000)
large_standouts <- large_cu_stats %>% filter(num_groups_added>400 | total_members_added>250000)
large_standouts <- large_cu_stats %>% filter(num_groups_added>400 | total_members_added>300000)
large_standouts <- large_cu_stats %>% filter(num_groups_added>400 | total_members_added>250000)
large_standouts <- large_cu_stats %>% filter(num_groups_added>400 | total_members_added>280000)
large_standouts <- large_cu_stats %>% filter(num_groups_added>400 | total_members_added>290000)
large_standouts <- large_cu_stats %>% filter(num_groups_added>400 | total_members_added>293000)
shiny::runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
shiny::runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp()
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
runApp('C:/Users/Moria/seg-analyzer')
ut <- get_acs(geography = "county",
variables = c(county_total_pop = "B01003_001",
county_one_race = "B02003_002"),
state = "UT",
year = 2019)
library(readxl)
library(tidyverse)
library(tidycensus)
ut <- get_acs(geography = "county",
variables = c(county_total_pop = "B01003_001",
county_one_race = "B02003_002"),
state = "UT",
year = 2019)
ut <- get_acs(geography = "county",
variables = c(county_total_pop = "B01003_001",
county_one_race = "B02001_002"),
state = "UT",
year = 2019)
View(ut)
setwd("C:/Users/Moria/tidy-tuesday/2021_Week39")
#load packages
library(tidyverse) #wrangling
library(tidytuesdayR) #tidytuesday
library(showtext) #add font
library(ragg) #ggsave
#load data
tuesdata <- tidytuesdayR::tt_load(2021, week = 39)
emmys <- tuesdata$nominees
View(emmys)
unique(emmys$distributor)
twitch <- emmys %>% filter(distributor=="Twitch")
View(twitch)
sorted(unique(emmys$distributor))
sort(unique(emmys$distributor))
emmys <- emmys %>% mutate(category2 = fct_lump(category, 20))
emmys %>% count(category2) %>% arrange(-n)
tuesdata <- tidytuesdayR::tt_load(2021, week = 39)
emmys <- tuesdata$nominees
emmys$category_clean <- substr(emmys$category, 1, nchar(emmys$category)-7)
emmys %>% count(category_clean) %>% arrange(-n)
category_counts <- emmys %>% count(category_clean) %>% arrange(-n)
View(category_counts)
install.packages("tools")
install.packages("tools")
?toTitleCase
emmys$category_clean <- toTitleCase(emmys$category_clean)
#get counts of categories
category_counts <- emmys %>% count(category_clean) %>% arrange(-n)
emmys$category_clean <- tools::toTitleCase(emmys$category_clean)
category_counts <- emmys %>% count(category_clean) %>% arrange(-n)
emmys2020 <- emmys %>% filter(year==2020)
View(emmys2020)
emmys <- emmys %>% mutate(animated = case_when(
str_detect(category_clean, "Animated") ~ 1,
TRUE ~ 0
))
animated <- emmys %>% filter(animated==1)
View(animated)
animated_categories_counts <- animated %>% count(category_clean)
animated_series_counts <- animated %>% count(title)
View(animated_categories_counts)
animated_shorts <- animated[!(animated$category_clean=="Outstanding Animated Program (for Programming One Hour or more)"),]
animated_shorts <- animated %>% filter(category_clean!="Outstanding Animated Program (for Programming One Hour or more)")
View(animated_shorts)
animated_shorts_title_counts <- animated_shorts %>% count(title) %>% arrange(-n)
View(animated_shorts_title_counts)
top5_list <- c("The Simpsons", "Robot Chicken", "Bob's Burgers", "Adventure Time", "Steven Universe")
animated_top5 <- animated_shorts %>% filter(title %in% top5_list)
View(animated_top5)
top5_grouped <- animated_top5 %>% group_by(category, title) %>% summarise(year=last(year),
distributor=last(distributor),
type=last(type),
category_clean=last(category_clean))
View(top5_grouped)
top5_grouped %>% group_by(title) %>% summarise(count=n())
install.packages("waffle")
library(waffle) #geom_waffle()
top5_grouped %>% count(title, type) %>% ggplot(aes(values=title, fill=type)) +
geom_waffle()
?geom_waffle()
?geom_waffle
top5_grouped %>% count(title, type) %>% ggplot(aes(values=title, fill=type)) +
waffle::geom_waffle()
top5_grouped %>% count(title, type) %>% ggplot(aes(values=title, fill=type)) + geom_waffle()
library(waffle)
top5_grouped %>% count(title, type) %>% ggplot(aes(values=title, fill=type)) + geom_waffle()
devtools::install_github("liamgilbey/ggwaffle")
install.packages('devtools')
library(devtools)
devtools::install_github("liamgilbey/ggwaffle")
library(ggwaffle) #geom_waffle()
top5_grouped %>% count(title, type) %>% ggplot(aes(values=title, fill=type)) + geom_waffle()
top5_grouped %>% count(title, type) %>% ggplot(aes(values=n, fill=type)) + geom_waffle()
top5_grouped %>% count(title, type) %>% ggplot(aes(x=title, y=n, fill=type)) + geom_waffle()
top5_grouped %>% ggplot(aes(x=title, y=n, fill=type)) + geom_waffle()
top5_grouped %>% count(title, type) %>% ggplot(aes(x=title, y=n, fill=type)) + geom_waffle()
waffle_data <- waffle_iron(top5_grouped, aes_d(group=title))
ggplot(waffle_data, aes(x,y,fill=group)) + geom_waffle()
View(waffle_data)
devtools::install_git("https://git.rud.is/hrbrmstr/waffle.git")
detach("package:waffle", unload = TRUE)
remove.packages("waffle", lib="~/R/win-library/4.1")
devtools::install_git("https://git.rud.is/hrbrmstr/waffle.git")
top5_grouped %>% count(title, type) %>% ggplot(aes(x=title, y=n, fill=type)) + geom_waffle()
top5_grouped %>% count(title, type) %>% ggplot(aes(values=n, fill=type)) + geom_waffle()
top5_grouped %>% count(title, type) %>% ggplot(aes(values=n, fill=type)) +
geom_waffle()
detach("package:ggwaffle", unload = TRUE)
top5_grouped %>% count(title, type) %>% ggplot(aes(values=n, fill=type)) +
geom_waffle() + facet_wrap(~title, nrow=1, strip.position = "bottom") +
coord_equal()
devtools::install_git("https://git.rud.is/hrbrmstr/waffle.git")
