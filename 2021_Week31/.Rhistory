xlarge_cu <- seg_recent %>% filter(assets>=100000000 & assets<500000000)
huge_cu <- seg_recent %>% filter(assets>=500000000)
#get stats for each cu size
small_cu_stats <- small_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
num_groups_added = n(),   #number of segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
med_cu_stats <- med_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
num_groups_added = n(),   #number of segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
large_cu_stats <- large_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
num_groups_added = n(),   #number of segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
xlarge_cu_stats <- xlarge_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
num_groups_added = n(),   #number of segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
huge_cu_stats <- huge_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
num_groups_added = n(),   #number of segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
#scatterplot theme
scatter_theme <- my_theme <- theme(
#titles
plot.title=element_text(family="bold", size=40, color="black", hjust=0),
#background
panel.border=element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_line(),
axis.line = element_blank(),
axis.title = element_text(size=35, family="bold", colour="black"),
axis.text = element_text(size=25, family="regular", colour="black"),
#no legend
legend.position = "none")
#5-number summary
summary(small_cu_stats$num_groups_added)
summary(small_cu_stats$total_members_added)
#scatter num groups
small_scatter_groups <- small_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#15ADC1", fill="#15ADC1", alpha=0.5, size=2) +
labs(title="Small Credit Unions Adding Groups (2015-2019)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_small_scatter_groups.png",
plot=small_scatter_groups,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#scatter num members
small_scatter_members <- small_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#15ADC1", fill="#15ADC1", alpha=0.5, size=2) +
labs(title="Small Credit Unions Adding Potential Members (2015-2019)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_small_scatter_members.png",
plot=small_scatter_members,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#filter to exceptionally high-performing CUs
filtered_small <- small_cu_stats %>% filter((num_groups_added>10) | (total_members_added>700))
#5-number summary
summary(med_cu_stats$num_groups_added)
summary(med_cu_stats$total_members_added)
#scatter num groups
med_scatter_groups <- med_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#FFCE06", fill="#FFCE06", alpha=0.5, size=2) +
labs(title="Medium Credit Unions Adding Groups (2015-2019)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_med_scatter_groups.png",
plot=med_scatter_groups,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#scatter num members
med_scatter_members <- med_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#FFCE06", fill="#FFCE06", alpha=0.5, size=2) +
labs(title="Medium Credit Unions Adding Potential Members (2015-2019)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_med_scatter_members.png",
plot=med_scatter_members,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#filter to highly performing CUs
filtered_med <- med_cu_stats %>% filter((num_groups_added>20) | (total_members_added>1700))
#5-number summary
summary(large_cu_stats$num_groups_added)
summary(large_cu_stats$total_members_added)
#scatter num groups
large_scatter_groups <- large_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#EE8109", fill="#EE8109", alpha=0.5, size=2) +
labs(title="Large Credit Unions Adding Groups (2015-2019)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_large_scatter_groups.png",
plot=large_scatter_groups,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#scatter num members
large_scatter_members <- large_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#EE8109", fill="#EE8109", alpha=0.5, size=2) +
labs(title="Large Credit Unions Adding Potential Members (2015-2019)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_large_scatter_members.png",
plot=large_scatter_members,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#filter to highest-performing CUs
filtered_large <- large_cu_stats %>% filter((num_groups_added>21) | (total_members_added>4000))
#5-number summary
summary(xlarge_cu_stats$num_groups_added)
summary(xlarge_cu_stats$total_members_added)
#scatter num groups
xlarge_scatter_groups <- xlarge_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#B9272A", fill="#B9272A", alpha=0.5, size=2) +
labs(title="Extra-Large Credit Unions Adding Groups (2015-2019)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_xlarge_scatter_groups.png",
plot=xlarge_scatter_groups,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#scatter num members
xlarge_scatter_members <- xlarge_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#B9272A", fill="#B9272A", alpha=0.5, size=2) +
labs(title="Extra-Large Credit Unions Adding Potential Members (2015-2019)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_xlarge_scatter_members.png",
plot=xlarge_scatter_members,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#5-number summary
summary(huge_cu_stats$num_groups_added)
summary(huge_cu_stats$total_members_added)
#scatter num groups
huge_scatter_groups <- huge_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#4AA02E", fill="#4AA02E", alpha=0.5, size=2) +
labs(title="Huge Credit Unions Adding Groups (2015-2019)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_huge_scatter_groups.png",
plot=huge_scatter_groups,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#scatter num members
huge_scatter_members <- huge_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#4AA02E", fill="#4AA02E", alpha=0.5, size=2) +
labs(title="Huge Credit Unions Adding Potential Members (2015-2019)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_huge_scatter_members.png",
plot=huge_scatter_members,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
View(xlarge_cu_stats)
filtered_xlarge <- xlarge_cu_stats %>% filter((num_groups_added>300) | (total_members_added>15000))
filtered_xlarge <- xlarge_cu_stats %>% filter((num_groups_added>300) | (total_members_added>14000))
View(filtered_xlarge)
View(huge_cu_stats)
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>2000) | (total_members_added>50000))
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>1800) | (total_members_added>50000))
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>1800) | (total_members_added>45000))
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>1800) | (total_members_added>40000))
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>1500) | (total_members_added>40000))
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>1400) | (total_members_added>40000))
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>1400) | (total_members_added>38000))
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>1800) | (total_members_added>38000))
View(filtered_huge)
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>2000) | (total_members_added>38000))
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>2100) | (total_members_added>38000))
filtered_huge <- huge_cu_stats %>% filter((num_groups_added>2200) | (total_members_added>38000))
View(seg_clean3)
num_cus_adding_segs <- seg_clean3 %>% group_by(year) %>% n_distinct(join_no)
num_cus_adding_segs <- seg_clean3 %>% group_by(year)
num_cus_adding_segs <- seg_clean3 %>% group_by(year) %>% count(join_no)
View(num_cus_adding_segs)
num_cus_adding_segs <- seg_clean3 %>% group_by(year) %>% tally(join_no)
num_cus_adding_segs <- seg_clean3 %>% group_by(year) %>% summarise(num_cus = n_distinct(join_no))
num_cus_adding_segs <- seg_clean3 %>% group_by(year) %>% summarise(num_cus = n_distinct(join_no))
#create line graph
seg_cu_years_line <- segs_added_byyear %>% ggplot(aes(x=year, y=num_cus)) +
geom_line(size=1.5, color="#15ADC1") +
scale_x_continuous(breaks=seq(2008,2020,1)) +
scale_y_continuous(limits=c(300,700)) +
ylab("Number of Credit Unions") + xlab("Year") +
labs(title="Number of Federal Credit Unions Adding SEGs (2008-2019)") +
line_graph_theme2
#save line graph
ggsave("visuals/seg_count_cus_byyear.png",
plot=seg_cu_years_line,
device = agg_png(width = 8, height = 5, units = "in", res = 300))
num_cus_adding_segs <- seg_clean3 %>% group_by(year) %>% summarise(num_cus = n_distinct(join_no))
#create line graph
seg_cu_years_line <- num_cus_adding_segs %>% ggplot(aes(x=year, y=num_cus)) +
geom_line(size=1.5, color="#15ADC1") +
scale_x_continuous(breaks=seq(2008,2020,1)) +
scale_y_continuous(limits=c(300,700)) +
ylab("Number of Credit Unions") + xlab("Year") +
labs(title="Number of Federal Credit Unions Adding SEGs (2008-2019)") +
line_graph_theme2
#save line graph
ggsave("visuals/seg_count_cus_byyear.png",
plot=seg_cu_years_line,
device = agg_png(width = 8, height = 5, units = "in", res = 300))
num_cus_adding_segs <- seg_clean3 %>% group_by(year) %>% summarise(num_cus = n_distinct(join_no))
#create line graph
seg_cu_years_line <- num_cus_adding_segs %>% ggplot(aes(x=year, y=num_cus)) +
geom_line(size=1.5, color="#15ADC1") +
scale_x_continuous(breaks=seq(2008,2020,1)) +
scale_y_continuous(limits=c(300,700)) +
ylab("Number of Credit Unions") + xlab("Year") +
labs(title="Number of Federal Credit Unions Adding SEGs (2008-2019)") +
coord_cartesian(expand=FALSE)+
line_graph_theme2
#save line graph
ggsave("visuals/seg_count_cus_byyear.png",
plot=seg_cu_years_line,
device = agg_png(width = 8, height = 5, units = "in", res = 300))
num_cus_adding_segs <- seg_clean3 %>% group_by(year) %>% summarise(num_cus = n_distinct(join_no))
#create line graph
seg_cu_years_line <- num_cus_adding_segs %>% ggplot(aes(x=year, y=num_cus)) +
geom_line(size=1.5, color="#15ADC1") +
scale_x_continuous(breaks=seq(2008,2020,1)) +
scale_y_continuous(limits=c(300,700)) +
ylab("Number of Credit Unions") + xlab("Year") +
labs(title="Number of Federal Credit Unions Adding SEGs (2008-2019)") +
line_graph_theme2
#save line graph
ggsave("visuals/seg_count_cus_byyear.png",
plot=seg_cu_years_line,
device = agg_png(width = 8, height = 5, units = "in", res = 300))
View(seg_clean3)
#subset to recent years
seg_recent <- seg_clean3 %>% filter(year>=2015)
#split up credit unions by asset size
small_cu <- seg_recent %>% filter(assets <10000000)
med_cu <- seg_recent %>% filter(assets>=10000000 & assets<50000000)
large_cu <- seg_recent %>% filter(assets>=50000000 & assets<100000000)
xlarge_cu <- seg_recent %>% filter(assets>=100000000 & assets<500000000)
huge_cu <- seg_recent %>% filter(assets>=500000000)
#get stats for each cu size
small_cu_stats <- small_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets),  #asset growth from last known number to first
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
med_cu_stats <- med_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets),  #asset growth from last known number to first
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
large_cu_stats <- large_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets),  #asset growth from last known number to first
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
xlarge_cu_stats <- xlarge_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets),  #asset growth from last known number to first
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
huge_cu_stats <- huge_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets),  #asset growth from last known number to first
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
View(small_cu_stats)
View(large_cu_stats)
#subset to recent years
seg_recent <- seg_clean3 %>% filter(year>=2015)
#split up credit unions by asset size
small_cu <- seg_recent %>% filter(assets <10000000)
med_cu <- seg_recent %>% filter(assets>=10000000 & assets<50000000)
large_cu <- seg_recent %>% filter(assets>=50000000 & assets<100000000)
xlarge_cu <- seg_recent %>% filter(assets>=100000000 & assets<500000000)
huge_cu <- seg_recent %>% filter(assets>=500000000)
#get stats for each cu size
small_cu_stats <- small_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets) - 1,  #asset growth percentage
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
med_cu_stats <- med_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets) - 1,  #asset growth percentage
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
large_cu_stats <- large_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets) - 1,  #asset growth percentage
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
xlarge_cu_stats <- xlarge_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets) - 1,  #asset growth percentage
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
huge_cu_stats <- huge_cu %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
fom_type = last(fom_type), #most recent classification of credit union
avg_assets = mean(assets), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets) - 1,  #asset growth percentage
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE),   #max size of seg
avg_potential_prop = mean(potential_members_prop, na.rm=TRUE), #avg prop of potential members
max_potential_prop = max(potential_members_prop, na.rm=TRUE))  #max prop of potential members
all_cu_stats <- rbind(small_cu_stats, med_cu_stats, large_cu_stats, xlarge_cu_stats, huge_cu_stats)
all_cu_stats_clean <- all_cu_stats %>% filter(asset_growth_num != 0)
summary(lm(asset_growth_pct ~ num_groups_added, data=all_cu_stats_clean))
plot(lm(asset_growth_pct ~ num_groups_added, data=all_cu_stats_clean))
summary(lm(log(asset_growth_pct) ~ num_groups_added, data=all_cu_stats_clean))
plot(lm(log(asset_growth_pct) ~ num_groups_added, data=all_cu_stats_clean))
summary(lm(asset_growth_pct ~ num_groups_added + total_members_added, data=all_cu_stats_clean))
summary(lm(asset_growth_pct ~ total_members_added, data=all_cu_stats_clean))
#load packages
library(tidyverse)
library(tidytuesdayR) #tidytuesday
library(ggplot2) #plots
library(showtext) #add font
library(ragg) #ggsave
library(patchwork) #put together multiple plots
#load data
tuesdata <- tidytuesdayR::tt_load(2021, week=29)
scooby <- tuesdata$scoobydoo
#clean data - script from Tan Ho (@_TanHo on Twitter, @TanHo_ on Twitch)
x <-
scooby %>%
select(season, title,
starts_with("caught"),
starts_with("captured"),
starts_with("unmask"),
starts_with("snack"),
-contains("other"),
-contains("not")) %>%
filter(title!= "Wrestle Maniacs")
scooby_clean <- x %>%
pivot_longer(cols = -c("season","title"), names_to = c(".value","character"), names_sep = "_") %>%
mutate(
across(c("caught","captured","unmask","snack"), ~as.logical(.x) %>% as.integer())
)
tuesdata <- tidytuesdayR::tt_load(2021, week=29)
scooby <- tuesdata$scoobydoo
#clean data - script from Tan Ho (@_TanHo on Twitter, @TanHo_ on Twitch)
x <-
scooby %>%
select(season, title,
starts_with("caught"),
starts_with("captured"),
starts_with("unmask"),
starts_with("snack"),
-contains("other"),
-contains("not")) %>%
filter(title!= "Wrestle Maniacs")
scooby_clean <- x %>%
pivot_longer(cols = -c("season","title"), names_to = c(".value","character"), names_sep = "_") %>%
mutate(
across(c("caught","captured","unmask","snack"), ~as.logical(.x) %>% as.integer())
)
View(scooby_clean)
tuesdata <- tidytuesdayR::tt_load(2021, week=29)
scooby <- tuesdata$scoobydoo
#clean data - script from Tan Ho (@_TanHo on Twitter, @TanHo_ on Twitch)
x <-
scooby %>%
select(season, title,
starts_with("caught"),
starts_with("captured"),
starts_with("unmask"),
starts_with("snack"),
-contains("other"),
-contains("not")) %>%
filter(title!= "Wrestle Maniacs")
char_actions <- x %>%
pivot_longer(cols = -c("season","title"), names_to = c(".value","character"), names_sep = "_") %>%
mutate(
across(c("caught","captured","unmask","snack"), ~as.logical(.x) %>% as.integer())
)
View(scooby)
setwd("C:/Users/Moria/tidy-tuesday/2021_Week31")
#load packages
library(tidyverse)
library(tidytuesdayR) #tidytuesday
library(ggplot2) #plots
library(showtext) #add font
library(ragg) #ggsave
#load data
tuesdata <- tidytuesdayR::tt_load(2021, week = 31)
olympics <- tuesdata$olympics
regions <- tuesdata$regions
View(regions)
View(olympics)
