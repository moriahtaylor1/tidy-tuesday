runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
ggplot() +
#Mercury
geom_vline(xintercept=as.numeric(calcLine(Merc)[1]),
size=as.numeric(calcLine(Merc)[2]),
color=as.character(calcLine(Merc))[3]) +
#Sun
geom_hline(yintercept=as.numeric(calcLine(Sun)[1]),
size=as.numeric(calcLine(Sun)[2]),
color=as.character(calcLine(Sun)[3])) +
#Moon
geom_point(aes(x=60,y=as.numeric(calcPoint(Moon)[1])),
size=20,
color=as.character(calcPoint(Moon)[2]),
fill=as.character(calcPoint(Moon)[3]),
stroke=5,
shape=21) +
#Venus
geom_point(aes(x=50, y=as.numeric(calcPoint(Venus)[1])),
size=18,
color=as.character(calcPoint(Venus)[2]),
fill=as.character(calcPoint(Venus)[3]),
stroke=4,
shape=21) +
#Mars
geom_point(aes(x=70, y=as.numeric(calcPoint(Mars)[1])),
size=15,
color=as.character(calcPoint(Mars)[2]),
fill=as.character(calcPoint(Mars)[3]),
stroke=3.5,
shape=21) +
#Jupiter
geom_point(aes(x=40, y=as.numeric(calcPoint(Jupiter)[1])),
size=12,
color=as.character(calcPoint(Jupiter)[2]),
fill=as.character(calcPoint(Jupiter)[3]),
stroke=3,
shape=21) +
#Saturn
geom_point(aes(x=80, y=as.numeric(calcPoint(Saturn)[1])),
size=10,
color=as.character(calcPoint(Saturn)[2]),
fill=as.character(calcPoint(Saturn)[3]),
stroke=2.5,
shape=21) +
#Uranus
geom_point(aes(x=30, y=as.numeric(calcPoint(Uranus)[1])),
size=8,
color=as.character(calcPoint(Uranus)[2]),
fill=as.character(calcPoint(Uranus)[3]),
stroke=2,
shape=21) +
#Neptune
geom_point(aes(x=90, y=as.numeric(calcPoint(Neptune)[1])),
size=6,
color=as.character(calcPoint(Neptune)[2]),
fill=as.character(calcPoint(Neptune)[3]),
stroke=1.5,
shape=21) +
#Pluto
geom_point(aes(x=100, y=as.numeric(calcPoint(Pluto)[1])),
size=4,
color=as.character(calcPoint(Pluto)[2]),
fill=as.character(calcPoint(Pluto)[3]),
stroke=1,
shape=21) +
#Plot logistics
xlim(0,120) + ylim(0,120) +
xlab("") + ylab("") +
coord_cartesian(expand=FALSE, clip="off") +
theme(panel.background=element_blank(),
plot.background=element_blank(),
panel.grid = element_line(color=calcAsc(Asc), size=26),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.margin = margin(-1,-1,-1,-1, unit="cm")
)
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp()
runApp('C:/Users/Moria/astrology-aRt')
runApp()
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
runApp('C:/Users/Moria/astrology-aRt')
tuesdata <- tidytuesdayR::tt_load(2021, week = 50)
spiders <- tuesdata$spiders
setwd("C:/Users/Moria/tidy-tuesday/2021_Week50")
library(tidyverse)
library(tidytuesdayR)
library(showtext)
library(ragg)
tuesdata <- tidytuesdayR::tt_load(2021, week = 50)
spiders <- tuesdata$spiders
tuesdata <- tidytuesdayR::tt_load('2021-12-07')
spiders <- tuesdata$spiders
View(spiders)
spiders$usa <- str_detect(spiders$distribution, "USA")
us_spiders <- spiders %>% filter(usa==TRUE)
View(us_spiders)
length(unique(us_spiders$family))
length(unique(us_spiders$genus))
length(unique(us_spiders$author))
us_spiders_21 <- spiders %>% filter(year >= 2000)
length(unique(us_spiders_21$family))
us_spiders_21 <- us_spiders %>% filter(year >= 2000)
length(unique(us_spiders_21$family))
length(unique(us_spiders_21$author))
View(us_spiders_21)
spider_counts_us_21 <- us_spiders_21 %>% group_by(family, year) %>% summarise(n = n())
View(spider_counts_us_21)
heatmap(as.matrix(spider_counts_us_21))
View(spider_counts_us_21)
View(mtcars())
mtcars
spider_counts_us_21 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n))
spider_counts_us <- us_spiders %>% group_by(family, year) %>% summarise(n = n())
spider_counts_us %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n))
family_counts <- us_spiders %>% count(family)
top_10_families <- us_spiders %>% group_by(family) %>% summarise(count = n()) %>% slice_max(count, n=10)
View(top_10_families)
top_10_families_list <- top_10_families$family
us_spiders_top10 <- us_spiders %>% filter(family %in% top_10_families_list)
#get counts of family per year
spider_counts_us_top10 <- us_spiders_top10 %>% group_by(family, year) %>% summarise(n = n())
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n))
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="black", high="#9C11DE")
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#9C11DE") +
theme(
#titles
#axes
axis.text = element_text(color="white"),
axis.title = element_text(color="white"),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
#legend
legend.text = element_text(color="white")
)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#9C11DE") +
theme(
#titles
#axes
axis.text = element_text(color="white"),
axis.title = element_text(color="white"),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white")
)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
theme(
#titles
#axes
axis.text = element_text(color="white"),
axis.title = element_text(color="white"),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white")
)
font_add(family = "regular", "KoHo-Regular.ttf")
showtext_auto()
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
theme(
#titles
plot.title = element_text(color="white", family="regular"),
plot.title.position = "plot"
plot.caption = element_text(color="white", family="regular"),
#axes
axis.text = element_text(color="white", family="regular"),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white"),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank()
)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
theme(
#titles
plot.title = element_text(color="white", family="regular"),
plot.title.position = "plot",
plot.caption = element_text(color="white", family="regular"),
#axes
axis.text = element_text(color="white", family="regular"),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white"),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank()
)
font_add(family = "bold", "KoHo-Bold.ttf")
showtext_auto()
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
theme(
#titles
plot.title = element_text(color="white", family="regular"),
plot.title.position = "plot",
plot.caption = element_text(color="white", family="regular"),
#axes
axis.text.y = element_text(color="white", family="bold"),
axis.text.x = element_text(color="white", family="bold"),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white"),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank()
)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
theme(
#titles
plot.title = element_text(color="white", family="regular"),
plot.title.position = "plot",
plot.caption = element_text(color="white", family="regular"),
#axes
axis.text.y = element_text(color="white", family="bold"),
axis.text.x = element_text(color="white", family="regular"),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white"),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank()
)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
theme(
#titles
plot.title = element_text(color="white", family="regular"),
plot.title.position = "plot",
plot.caption = element_text(color="white", family="regular"),
#axes
axis.text.y = element_text(color="white", family="bold"),
axis.text.x = element_text(color="white", family="regular"),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white"),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank(),
legend.position = "top"
)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
coord_cartesian(expand=FALSE) +
guides(fill=guide.colorbar(barwidth=unit(20, 'lines'), barheight=unit(0.5, 'lines'))) +
theme(
#titles
plot.title = element_text(color="white", family="regular"),
plot.title.position = "plot",
plot.caption = element_text(color="white", family="regular"),
#axes
axis.text.y = element_text(color="white", family="bold"),
axis.text.x = element_text(color="white", family="regular"),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white"),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank(),
legend.position = "top"
)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
coord_cartesian(expand=FALSE) +
guides(fill=guide_colorbar(barwidth=unit(20, 'lines'), barheight=unit(0.5, 'lines'))) +
theme(
#titles
plot.title = element_text(color="white", family="regular"),
plot.title.position = "plot",
plot.caption = element_text(color="white", family="regular"),
#axes
axis.text.y = element_text(color="white", family="bold"),
axis.text.x = element_text(color="white", family="regular"),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white"),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank(),
legend.position = "top"
)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
scale_y_discrete(limit=rev) +
coord_cartesian(expand=FALSE) +
guides(fill=guide_colorbar(barwidth=unit(20, 'lines'), barheight=unit(0.5, 'lines'))) +
labs(title="") +
theme(
#titles
plot.title = element_text(color="white", family="bold"),
plot.title.position = "plot",
plot.subtitle = element_text(color="white", family="regular"),
plot.caption = element_text(color="darkgrey", family="regular"),
plot.caption.position = "plot",
#axes
axis.text.y = element_text(color="white", family="bold"),
axis.text.x = element_text(color="white", family="regular"),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white"),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank(),
legend.position = "top"
)
View(spider_counts_us_top10)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
scale_y_discrete(limit=rev) +
coord_cartesian(expand=FALSE) +
guides(fill=guide_colorbar(barwidth=unit(20, 'lines'), barheight=unit(0.5, 'lines'))) +
labs(title="Number of Species per Family in United States (1757-2021)",
subtitle="Top 10 Most Common Families Shown",
caption = "Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 50") +
theme(
#titles
plot.title = element_text(color="white", family="bold"),
plot.title.position = "plot",
plot.subtitle = element_text(color="white", family="regular"),
plot.caption = element_text(color="darkgrey", family="regular"),
plot.caption.position = "plot",
#axes
axis.text.y = element_text(color="white", family="bold"),
axis.text.x = element_text(color="white", family="regular"),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white"),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank(),
legend.position = "top"
)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
scale_y_discrete(limit=rev) +
coord_cartesian(expand=FALSE) +
guides(fill=guide_colorbar(barwidth=unit(20, 'lines'), barheight=unit(0.5, 'lines'))) +
labs(title="Number of Species per Family in United States (1757-2021)",
subtitle="Top 10 Most Common Families Shown",
caption = "Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 50") +
theme(
#titles
plot.title = element_text(color="white", family="bold", hjust=0.5, size=45),
plot.title.position = "plot",
plot.subtitle = element_text(color="white", family="regular", hjust=0.5, size=30),
plot.caption = element_text(color="darkgrey", family="regular", hjust=0.5, size=25),
plot.caption.position = "plot",
#axes
axis.text.y = element_text(color="white", family="bold", size=35),
axis.text.x = element_text(color="white", family="regular", size=35),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white"),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank(),
legend.position = "top"
)
spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
scale_y_discrete(limit=rev) +
coord_cartesian(expand=FALSE) +
guides(fill=guide_colorbar(barwidth=unit(20, 'lines'), barheight=unit(0.5, 'lines'))) +
labs(title="Number of Species per Family in United States (1757-2021)",
subtitle="Top 10 Most Common Families Shown",
caption = "Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 50") +
theme(
#titles
plot.title = element_text(color="white", family="bold", hjust=0.5, size=45),
plot.title.position = "plot",
plot.subtitle = element_text(color="white", family="regular", hjust=0.5, size=30),
plot.caption = element_text(color="darkgrey", family="regular", hjust=0.5, size=25),
plot.caption.position = "plot",
#axes
axis.text.y = element_text(color="white", family="bold", size=35),
axis.text.x = element_text(color="white", family="regular", size=35),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white", family="regular", size=25),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank(),
legend.position = "top"
)
spider_heatmap <- spider_counts_us_top10 %>% ggplot(aes(x=year, y=family)) + geom_tile(aes(fill=n)) +
scale_fill_gradient(low="#2f0543", high="#c470eb") +
scale_y_discrete(limit=rev) +
coord_cartesian(expand=FALSE) +
guides(fill=guide_colorbar(barwidth=unit(20, 'lines'), barheight=unit(0.5, 'lines'))) +
labs(title="Number of Species per Family in United States (1757-2021)",
subtitle="Top 10 Most Common Families Shown",
caption = "Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 50") +
theme(
#titles
plot.title = element_text(color="white", family="bold", hjust=0.5, size=45),
plot.title.position = "plot",
plot.subtitle = element_text(color="white", family="regular", hjust=0.5, size=30),
plot.caption = element_text(color="darkgrey", family="regular", hjust=0.5, size=25),
plot.caption.position = "plot",
#axes
axis.text.y = element_text(color="white", family="bold", size=35),
axis.text.x = element_text(color="white", family="regular", size=35),
axis.title = element_blank(),
#background
plot.background = element_rect(fill="black"),
panel.background = element_rect(fill="black"),
panel.grid = element_blank(),
#legend
legend.text = element_text(color="white", family="regular", size=25),
legend.background = element_rect(fill="black"),
legend.box.background = element_rect(fill="black"),
legend.title = element_blank(),
legend.position = "top"
)
#save plot
ggsave("Spider Families Heat Map.png",
spider_heatmap,
device = agg_png(width = 8, height = 6, units = "in", res = 300))
setwd("C:/Users/Moria/tidy-tuesday/2021_Week51")
#load packages
library(tidyverse)
library(tidytuesdayR)
library(showtext)
library(ragg)
#load data
tuesdata <- tidytuesdayR::tt_load('2021-12-14')
tracks <- tuesdata$studio_album_tracks
#load packages
library(tidyverse)
library(tidytuesdayR)
library(showtext)
library(ragg)
#load data
tuesdata <- tidytuesdayR::tt_load('2021-12-14')
tracks <- tuesdata$studio_album_tracks
#get variables of interest
View(tracks)
length(unique(tracks$key_name))
