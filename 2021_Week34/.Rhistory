(prop_bar <- main_characters %>% ggplot(aes(x=main_char, y=domain, fill=domain)) +
geom_bar(position="fill", stat="identity"))
(prop_bar <- main_characters %>% ggplot(aes(x=main_char, fill=domain)) +
geom_bar(position="fill", stat="identity"))
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity"))
unique(computer$speaking_char)
sotr(unique(computer$speaking_char))
sort(unique(computer$speaking_char))
computer2 <- computer %>% filter(speaking_char != "Mrs. Troi")
#use string detect to identify different versions of main character's speaking roles
computer2 <- computer2 %>% mutate(main_char = case_when(
str_detect(speaking_char, "Picard") ~ "Picard",
str_detect(speaking_char, "Riker") ~ "Riker",
str_detect(speaking_char, "Geordi") ~ "Geordi",
str_detect(speaking_char, "Data") ~ "Data",
str_detect(speaking_char, "Troi") ~ "Troi",
str_detect(speaking_char, "Beverly") ~ "Beverly",
str_detect(speaking_char, "Worf") ~ "Worf"))
main_characters <- computer2[!is.na(computer2$main_char),]
##PLOTTING##
#load fonts
#themes
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity"))
#remove rows with NA value for domain
main_characters <- main_characters[!is.na(main_characters$domain),]
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity"))
main_characters %>% count(domain)
main_characters[main_characters$domain=="Iot",] <- "IoT"
main_characters$domain[main_characters$domain=="Iot",] <- "IoT"
main_characters <- main_characters[!(main_characters$domain=="Iot"),]
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity"))
setwd("C:/Users/Moria/tidy-tuesday/2021_Week34")
font_add(family="regular", "SpartanMedium.ttf")
showtext_auto()
font_add(family="regular", "Spartan-Medium.ttf")
showtext_auto()
my_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.caption=element_text(family="regular", size=35, color="#cccccc", hjust=0.5),
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_text(size=35, family="regular", color="white"),
axis.text.x = element_blank(),
#no legend
legend.position = "right",
legend.title = element_blank(),
legend.background = element_rect(fill = "black", color = "black"),
legend.text = element_text(size=30, family="regular", color="white"))
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
coord_flip() + my_theme)
font_add(family="regular", "Baloo2-Medium.ttf")
showtext_auto()
#themes
my_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.caption=element_text(family="regular", size=35, color="#cccccc", hjust=0.5),
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_text(size=35, family="regular", color="white"),
axis.text.x = element_blank(),
#no legend
legend.position = "right",
legend.title = element_blank(),
legend.background = element_rect(fill = "black", color = "black"),
legend.text = element_text(size=30, family="regular", color="white"))
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
coord_flip() + my_theme)
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
coord_flip() + my_theme)
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 6, height = 6, units = "in", res = 300))
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
setwd("C:/Users/Moria/tidy-tuesday/2021_Week34")
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
my_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.caption=element_text(family="regular", size=35, color="#cccccc", hjust=0.5),
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_text(size=35, family="regular", color="white"),
axis.text.x = element_blank(),
#no legend
legend.position = "right",
legend.title = element_blank(),
legend.background = element_rect(fill = "black", color = "black"),
legend.key = element_rect(fill="black", color="black"),
legend.text = element_text(size=30, family="regular", color="white"))
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
coord_flip() + my_theme)
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
my_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.caption=element_text(family="regular", size=35, color="#cccccc", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_text(size=35, family="regular", color="white"),
axis.text.x = element_blank(),
#no legend
legend.position = "right",
legend.title = element_blank(),
legend.background = element_rect(fill = "black", color = "black"),
legend.key = element_rect(fill="black", color="black"),
legend.text = element_text(size=30, family="regular", color="white"))
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
coord_flip() + my_theme)
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#Idea 2: most frequent words
my_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.caption=element_text(family="regular", size=35, color="#cccccc", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "navy"),
plot.background = element_rect(fill = "navy"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_text(size=35, family="regular", color="white"),
axis.text.x = element_blank(),
#no legend
legend.position = "right",
legend.title = element_blank(),
legend.background = element_rect(fill = "navy", color = "navy"),
legend.key = element_rect(fill="black", color="navy"),
legend.text = element_text(size=30, family="regular", color="white"))
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
coord_flip() + my_theme)
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
my_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.caption=element_text(family="regular", size=35, color="#cccccc", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "#101945"),
plot.background = element_rect(fill = "#101945"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_text(size=35, family="regular", color="white"),
axis.text.x = element_blank(),
#no legend
legend.position = "right",
legend.title = element_blank(),
legend.background = element_rect(fill = "#101945", color = "#101945"),
legend.key = element_rect(fill="#101945", color="#101945"),
legend.text = element_text(size=30, family="regular", color="white"))
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
coord_flip() + my_theme)
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#Idea 2: most frequent words
my_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.caption=element_text(family="regular", size=35, color="#cccccc", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "#0C1335"),
plot.background = element_rect(fill = "#0C1335"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_text(size=35, family="regular", color="white"),
axis.text.x = element_blank(),
#no legend
legend.position = "right",
legend.title = element_blank(),
legend.background = element_rect(fill = "#0C1335", color = "#0C1335"),
legend.key = element_rect(fill="#0C1335", color="#0C1335"),
legend.text = element_text(size=30, family="regular", color="white"))
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
coord_flip() + my_theme)
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
my_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.caption=element_text(family="regular", size=35, color="#555a72", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "#0C1335"),
plot.background = element_rect(fill = "#0C1335"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_text(size=35, family="regular", color="white"),
axis.text.x = element_blank(),
#no legend
legend.position = "right",
legend.title = element_blank(),
legend.background = element_rect(fill = "#0C1335", color = "#0C1335"),
legend.key = element_rect(fill="#0C1335", color="#0C1335"),
legend.text = element_text(size=30, family="regular", color="white"))
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
coord_flip() + my_theme)
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
#Idea 2: most frequent words
(prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
scale_fill_manual(values=brights) +
coord_flip() + my_theme)
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
brights <- c("#E00E31", "#F48F05", "#8FEA0E", "#0EEA9B", "#265ACF", "#05C7EE", "#9C0EE0", "#E23E7C")
prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
scale_fill_manual(values=brights) +
coord_flip() + my_theme
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
brights <- c("#F2F113", "#8FEA0E", "#F48F05", "#0EEA9B", "#265ACF", "#05C7EE", "#9C0EE0", "#E23E7C")
prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
scale_fill_manual(values=brights) +
coord_flip() + my_theme
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
brights <- c("#F48F05", "#8FEA0E", "#F2F113", "#0EEA9B", "#265ACF", "#05C7EE", "#9C0EE0", "#E23E7C")
prop_bar <- main_characters %>% group_by(main_char, domain) %>%
summarise(n=n()) %>%
ggplot(aes(x=main_char, y=n, fill=domain)) +
geom_bar(position="fill", stat="identity") +
labs(title="Speech Command Categories by Character",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
scale_fill_manual(values=brights) +
coord_flip() + my_theme
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
ggsave("speech_commands_bychar.png",
plot=prop_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
all_words <- stri_paste(computer$interaction, collapse=" ")
library(stringi) #stri_paste()
all_words <- stri_paste(computer$interaction, collapse=" ")
library(tm) #text-mining tools
getTransformations()
all_words <- stri_paste(computer$interaction, collapse=" ")
all_words <- tm_map(all_words, removeNumbers)
all_words <- tm_map(all_words, removePunctuation)
all_words <- tm_map(all_words, removeWords, stopwords("english"))
all_words <- stri_paste(computer$interaction, collapse=" ")
all_words <- str_split(all_words, pattern=" ")
View(all_words)
all_words <- stri_paste(computer$interaction, collapse=" ")
all_words <- tm_map(all_words, removeNumbers)
all_words <- tm_map(all_words, content_transformer(removeNumbers))
all_words <- tm_map(all_words, content_transformer(removePunctuation))
all_words <- tm_map(all_words, content_transformer(removeWords), stopwords("english"))
all_words <- removeNumbers(all_words)
all_words <- removePunctuation(all_words)
all_words <- removeWords(all_words, stopwords("english"))
split_words <- strsplit(all_words, split=" ")
View(split_words)
split_words[1]
all_words <- stripWhitespace(all_words)
split_words <- strsplit(all_words, split=" ")
split_words[1]
all_words <- tolower(all_words)
split_words <- strsplit(all_words, split=" ")
split_words[1]
list_words <- split_words[1]
list_words <- as.data.frame(split_words[1])
all_words <- stri_paste(computer$interaction, collapse=" ")
all_words <- removeNumbers(all_words)
all_words <- removePunctuation(all_words)
all_words <- stripWhitespace(all_words)
all_words <- tolower(all_words)
all_words <- removeWords(all_words, stopwords("english"))
split_words <- strsplit(all_words, split=" ")
list_words <- as.data.frame(split_words[1])
View(list_words)
split_words[1]
all_words <- stri_paste(computer$interaction, collapse=" ")
all_words <- tolower(all_words)
all_words <- removeNumbers(all_words)
all_words <- removePunctuation(all_words)
all_words <- removeWords(all_words, stopwords("english"))
all_words <- stripWhitespace(all_words)
split_words <- strsplit(all_words, split=" ")
list_words <- as.data.frame(split_words[1])
View(list_words)
names(words_df) <- "word"
words_df <- as.data.frame(split_words[1])
names(words_df) <- "word"
words_df %>% count(word)
words_df %>% count(word) %>% sort(-word)
words_df %>% count(word) %>% arrange(-word)
words_df %>% count(word) %>% arrange(-n)
counts_slice <- word_counts %>% slice_max(n, n=10)
word_counts <- words_df %>% count(word) %>% arrange(-n)
counts_slice <- word_counts %>% slice_max(n, n=10)
View(counts_slice)
word_freq_bar <- counts_slice %>% ggplot(aes(x=word, y=n)) +
geom_col() + coord_flip + my_theme
ggsave("word_freq.png",
plot=word_freq_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
word_freq_bar <- counts_slice %>% ggplot(aes(x=word, y=n)) +
geom_col() + coord_flip() + my_theme
ggsave("word_freq.png",
plot=word_freq_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
word_freq_bar <- counts_slice %>% ggplot(aes(x=word, y=n)) +
geom_col() + coord_flip(expand=FALSE) + my_theme
ggsave("word_freq.png",
plot=word_freq_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
word_freq_bar <- counts_slice %>% ggplot(aes(x=word, y=n)) +
geom_col(fill="#9C0EE0") + coord_flip(expand=FALSE) + my_theme
ggsave("word_freq.png",
plot=word_freq_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
word_freq_bar <- counts_slice %>% ggplot(aes(x=word, y=n)) +
geom_col(fill="#0EEA9B") + coord_flip(expand=FALSE) + my_theme
ggsave("word_freq.png",
plot=word_freq_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
word_freq_bar <- counts_slice %>% ggplot(aes(x=word, y=n)) +
geom_col(fill="#0EEA9B") +
geom_text(aes(label=n, family="regular"),
position=position_dodge(width=0.9),
hjust=1.2, size=10, color="white") +
coord_flip(expand=FALSE) + my_theme
ggsave("word_freq.png",
plot=word_freq_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
word_freq_bar <- counts_slice %>% ggplot(aes(x=word, y=n)) +
geom_col(fill="#0EEA9B") +
geom_text(aes(label=n, family="regular"),
position=position_dodge(width=0.9),
hjust=1.2, size=10, color="#0C1335") +
coord_flip(expand=FALSE) + my_theme
ggsave("word_freq.png",
plot=word_freq_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
word_freq_bar <- counts_slice %>% ggplot(aes(x=word, y=n)) +
geom_col(fill="#0EEA9B") +
geom_text(aes(label=n, family="regular"),
position=position_dodge(width=0.9),
hjust=1.2, size=10, color="#0C1335") +
labs(title="10 Most-Used Words in Star Trek Commands",
caption="Moriah Taylor | @moriah_taylor58 | #TidyTuesday Week 34") +
coord_flip(expand=FALSE) + my_theme
ggsave("word_freq.png",
plot=word_freq_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
