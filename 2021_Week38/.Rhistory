features <-
music_clean %>%
pivot_longer(c(danceability, energy, loudness, speechiness, acousticness, instrumentalness, liveness, valence, tempo)) %>%
group_by(week_id, name) %>%
summarise(value = mean(value, na.rm = TRUE))
View(features)
major_key <- music_clean %>% filter(mode==1)
minor_key <- music_clean %>% filter(mode==0)
minor_features <-
major_key %>%
pivot_longer(c(danceability, energy, loudness, speechiness, acousticness, instrumentalness, liveness, valence, tempo)) %>%
group_by(week_id, name) %>%
summarise(value = mean(value, na.rm = TRUE))
minor_features <-
minor_key %>%
pivot_longer(c(danceability, energy, loudness, speechiness, acousticness, instrumentalness, liveness, valence, tempo)) %>%
group_by(week_id, name) %>%
summarise(value = mean(value, na.rm = TRUE))
major_features <-
major_key %>%
pivot_longer(c(valence, spotify_track_popularity)) %>%
group_by(week_id, name) %>%
summarise(value = mean(value, na.rm = TRUE))
minor_features <-
minor_key %>%
pivot_longer(c(valence, spotify_track_popularity)) %>%
group_by(week_id, name) %>%
summarise(value = mean(value, na.rm = TRUE))
minor_features %>% ggplot(aes(x = week_id, y = valence)) +
geom_line(alpha = 0.3) +
geom_smooth(method = 'loess', size = 2)
View(minor_features)
minor_features <-
minor_key %>%
select(week_id, valence, spotify_track_popularity) %>%
group_by(week_id, name) %>%
summarise(value = mean(value, na.rm = TRUE))
minor_features %>% ggplot(aes(x = week_id, y = valence)) +
geom_line(alpha = 0.3) +
geom_smooth(method = 'loess', size = 2)
minor_features <-
minor_key %>%
select(week_id, valence, spotify_track_popularity) %>%
group_by(week_id) %>%
summarise(valence = mean(valence),
popularity = mean(spotify_track_popularity))
minor_features %>% ggplot(aes(x = week_id, y = valence)) +
geom_line(alpha = 0.3) +
geom_smooth(method = 'loess', size = 2)
major_features <-
major_key %>%
select(week_id, valence, spotify_track_popularity) %>%
group_by(week_id) %>%
summarise(valence = mean(valence),
popularity = mean(spotify_track_popularity))
font_add(family="regular", "Nunito-Regular.ttf")
showtext_auto()
setwd("C:/Users/Moria/tidy-tuesday/2021_Week38")
font_add(family="regular", "Nunito-Regular.ttf")
showtext_auto()
dark_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=45, color="white"),
plot.title.position = "plot",
plot.subtitle = element_text(family="regular", size=25, hjust=0.5, color="white"),
plot.caption=element_text(family="regular", size=35, color="#333333", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_text(size=30, family="regular", color="white"),
axis.text.x = element_blank(),
#no legend
legend.position = "none")
dark_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=45, color="white"),
plot.title.position = "plot",
plot.subtitle = element_text(family="regular", size=25, hjust=0.5, color="white"),
plot.caption=element_text(family="regular", size=35, color="#333333", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size=18, family="regular", color="white"),
#no legend
legend.position = "none")
dark_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.subtitle = element_text(family="regular", size=25, hjust=0.5, color="white"),
plot.caption=element_text(family="regular", size=35, color="#333333", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size=18, family="regular", color="white"),
#no legend
legend.position = "none")
minor_features %>% ggplot(aes(x = week_id, y = popularity)) +
geom_line(alpha = 0.3) +
geom_smooth(method = 'loess', size = 2) +
scale_x_continuous(breaks = scales::pretty_breaks()) +
scale_y_continuous(breaks = scales::pretty_breaks()) +
labs(x = NULL,
y = NULL,
title = "Songs in Minor Key")
major_features %>% ggplot(aes(x = week_id, y = popularity)) +
geom_line(alpha = 0.3) +
geom_smooth(method = 'loess', size = 2) +
scale_x_continuous(breaks = scales::pretty_breaks()) +
scale_y_continuous(breaks = scales::pretty_breaks()) +
labs(x = NULL,
y = NULL,
title = "Songs in Minor Key")
major_features %>% ggplot(aes(x = week_id, y = popularity)) +
geom_line(alpha = 0.3) +
geom_smooth(method = 'loess', size = 2) +
scale_x_continuous(breaks = scales::pretty_breaks()) +
scale_y_continuous(breaks = scales::pretty_breaks()) +
labs(x = NULL,
y = NULL,
title = "Songs in Major Key")
minor_features %>% ggplot(aes(x = week_id, y = popularity)) +
geom_line(alpha = 0.3) +
geom_smooth(method = 'loess', size = 2) +
scale_x_continuous(breaks = scales::pretty_breaks()) +
scale_y_continuous(breaks = scales::pretty_breaks()) +
labs(x = NULL,
y = NULL,
title = "Songs in Minor Key")
music_clean$week_id <- as.Date(music_clean$week_id, "%m/%d/%Y")
major_key <- music_clean %>% filter(mode==1)
minor_key <- music_clean %>% filter(mode==0)
major_features <-
major_key %>%
select(week_id, valence, spotify_track_popularity) %>%
group_by(week_id) %>%
summarise(valence = mean(valence),
popularity = mean(spotify_track_popularity))
minor_features <-
minor_key %>%
select(week_id, valence, spotify_track_popularity) %>%
group_by(week_id) %>%
summarise(valence = mean(valence),
popularity = mean(spotify_track_popularity))
minor_features %>% ggplot(aes(x = week_id, y = popularity)) +
geom_line(alpha = 0.3) +
geom_smooth(method = 'loess', size = 2) +
scale_x_continuous(breaks = scales::pretty_breaks()) +
scale_y_continuous(breaks = scales::pretty_breaks()) +
labs(x = NULL,
y = NULL,
title = "Songs in Minor Key")
View(minor_features)
music_clean$year <- as.Date(music_clean$week_id, "%Y")
View(music_clean)
music_clean$year <- format(music_clean$week_id, "%Y")
key_byyear <- music_clean %>% group_by(year) %>% summarise(count_major = which(mode==1),
count_minor = which(mode==0))
key_byyear <- music_clean %>% group_by(year) %>% summarise(count_major = count(mode==1),
count_minor = count(mode==0))
key_byyear <- music_clean %>% group_by(year) %>% summarise(count_major = n(which(mode==1)),
count_minor = n(which(mode==0)))
key_byyear <- music_clean %>% group_by(year) %>% summarise(count_major = count(which(mode==1)),
count_minor = count(which(mode==0)))
key_byyear <- music_clean %>% group_by(year) %>% summarise(count_major = length(which(mode==1)),
count_minor = length(which(mode==0)))
View(key_byyear)
key_byyear <- music_clean %>% filter(year<2021) %>% group_by(year) %>%
summarise(count_major = length(which(mode==1)),
count_minor = length(which(mode==0)))
key_byyear %>% ggplot(aes(x=year)) +
geom_line(y=count_major) +
geom_line(y=count_minor)
key_byyear %>% ggplot(aes(x=year)) +
geom_line(aes(y=count_major)) +
geom_line(aes(y=count_minor))
key_byyear %>% ggplot(aes(x=year, y=count_major)) + geom_line()
key_byyear %>% ggplot(aes(x=year, y=count_major)) + geom_point()
key_byyear %>% ggplot(aes(x=year, y=count_minor)) + geom_point()
key_byyear <- music_clean %>% filter(year<2021) %>% group_by(year) %>%
summarise(count_major = length(which(mode==1)),
count_minor = length(which(mode==0))) %>%
pivot_longer(c(count_major, count_minor))
View(key_byyear)
key_byyear %>% ggplot(aes(x=year, y=value, color=name)) + geom_point()
key_byyear %>% ggplot(aes(x=year, y=value, color=name)) + geom_point() + geom_smooth()
key_byyear %>% ggplot(aes(x=year, y=value, color=name)) + geom_line(stat="identity")
key_byyear %>% ggplot(aes(x=year, y=value, group=name)) + geom_line(stat="identity")
key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) + geom_line(stat="identity")
key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) + geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710"))
key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) + geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710")) + dark_theme
key_byyear <- music_clean %>% filter(year<2021) %>% group_by(song_id, year) %>%
summarise(count_major = length(which(mode==1)),
count_minor = length(which(mode==0))) %>%
pivot_longer(c(count_major, count_minor))
key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity", size=2) +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity", size=0.5) +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
num1_key_byyear <- music_clean %>% filter(year<2021 & week_position==1) %>%
group_by(song_id, year) %>%
summarise(count_major = length(which(mode==1)),
count_minor = length(which(mode==0))) %>%
pivot_longer(c(count_major, count_minor))
key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity", size=0.5) +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity", size=0.5) +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_point() +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
num1_key_byyear <- music_clean %>% filter(year<2021 & week_position==1) %>%
group_by(year) %>%
summarise(count_major = length(which(mode==1)),
count_minor = length(which(mode==0))) %>%
pivot_longer(c(count_major, count_minor))
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_point() +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_discrete(breaks=scales::pretty_breaks()) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
music_clean$year <- as.numeric(format(music_clean$week_id, "%Y"))
num1_key_byyear <- music_clean %>% filter(year<2021 & week_position==1) %>%
group_by(year) %>%
summarise(count_major = length(which(mode==1)),
count_minor = length(which(mode==0))) %>%
pivot_longer(c(count_major, count_minor))
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
View(num1_key_byyear)
dark_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.subtitle = element_text(family="regular", size=25, hjust=0.5, color="white"),
plot.caption=element_text(family="regular", size=35, color="#333333", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size=18, family="regular", color="white"),
#no legend
legend.position = "top")
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
dark_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.subtitle = element_text(family="regular", size=25, hjust=0.5, color="white"),
plot.caption=element_text(family="regular", size=35, color="#333333", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size=18, family="regular", color="white"),
#no legend
legend.position = "top",
legend.background = element_rect(fill="black", color="black"),
legend.box.background = element_rect(fill="black", color="black"),
legend.text = element_text(family="regular", color="white", size=18),
legend.title = element_blank(),
legend.key = element_rect(fill="black"))
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
xlab("Year") + ylab("Number of Songs") +
dark_theme
library(ggtext) #element_markdown
dark_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=60, color="white"),
plot.title.position = "plot",
plot.subtitle = element_markdown(family="regular", size=25, hjust=0.5, color="white"),
plot.caption=element_text(family="regular", size=35, color="#333333", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size=18, family="regular", color="white"),
#no legend
legend.position = "none")
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
xlab("Year") + ylab("Number of Songs") +
labs(title="Number of #1 Billboard Hits",
subtitle="Written in <i style='color:#B487E4'>Major</i> and <i style='color:#6AC710'>Minor</i> Keys")
dark_theme
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
xlab("Year") + ylab("Number of Songs") +
labs(title="Number of #1 Billboard Hits",
subtitle="Written in <i style='color:#B487E4'>Major</i> and <i style='color:#6AC710'>Minor</i> Keys") +
dark_theme
dark_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=45, color="white"),
plot.title.position = "plot",
plot.subtitle = element_markdown(family="regular", size=30, hjust=0.5, color="white"),
plot.caption=element_text(family="regular", size=35, color="#333333", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size=18, family="regular", color="white"),
#no legend
legend.position = "none")
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity") +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
xlab("Year") + ylab("Number of Songs") +
labs(title="Number of #1 Billboard Hits",
subtitle="Written in <i style='color:#B487E4'>Major</i> and <i style='color:#6AC710'>Minor</i> Keys") +
dark_theme
num1_key_byyear %>% ggplot(aes(x=year, group=name, fill=name)) +
geom_density(position="fill")
groupedby_mode <- music_clean %>% filter(year<2021 & week_position==1) %>%
group_by(year, mode) %>%
summarise(count=n())
groupedby_mode %>% ggplot(aes(x=year, group=mode, fill=mode)) +
geom_density(position="fill")
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity", size=1) +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
xlab("Year") + ylab("Number of Songs") +
labs(title="Number of #1 Billboard Hits",
subtitle="Written in <i style='color:#B487E4'>Major</i> and <i style='color:#6AC710'>Minor</i> Keys") +
dark_theme
num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity", size=1) +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
coord_cartesian(expand=FALSE) +
xlab("Year") + ylab("Number of Songs") +
labs(title="Number of #1 Billboard Hits",
subtitle="Written in <i style='color:#B487E4'>Major</i> and <i style='color:#6AC710'>Minor</i> Keys") +
dark_theme
ggsave("keys.png",
plot = keys,
device = agg_png(width = 9, height = 6, units = "in", res = 300))
keys <- num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity", size=1) +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
coord_cartesian(expand=FALSE) +
xlab("Year") + ylab("Number of Songs") +
labs(title="Number of #1 Billboard Hits",
subtitle="Written in <i style='color:#B487E4'>Major</i> and <i style='color:#6AC710'>Minor</i> Keys") +
dark_theme
ggsave("keys.png",
plot = keys,
device = agg_png(width = 9, height = 6, units = "in", res = 300))
dark_theme <- theme(
#titles
plot.title=element_text(family="regular", hjust=0.5, size=70, color="white"),
plot.title.position = "plot",
plot.subtitle = element_markdown(family="regular", size=50, hjust=0.5, color="white"),
plot.caption=element_text(family="regular", size=35, color="#333333", hjust=0.5),
plot.caption.position = "plot",
#background
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size=28, family="regular", color="white"),
#no legend
legend.position = "none")
keys <- num1_key_byyear %>% ggplot(aes(x=year, y=value, color=name, group=name)) +
geom_line(stat="identity", size=1) +
scale_color_manual(values=c("#B487E4", "#6AC710")) +
scale_x_continuous(breaks=scales::pretty_breaks()) +
scale_y_continuous(breaks=scales::pretty_breaks()) +
coord_cartesian(expand=FALSE) +
xlab("Year") + ylab("Number of Songs") +
labs(title="Number of #1 Billboard Hits",
subtitle="Written in <i style='color:#B487E4'>Major</i> and <i style='color:#6AC710'>Minor</i> Keys") +
dark_theme
ggsave("keys.png",
plot = keys,
device = agg_png(width = 9, height = 6, units = "in", res = 300))
